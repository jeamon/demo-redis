name: tests
on:
  push:
    branches: ['*']
    paths-ignore: ['**.md']
  pull_request:
    types: [opened, synchronize, labeled, reopened, synchronize, ready_for_review]
    paths-ignore: ['**.md']

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    - name: Checkout code
      uses: actions/checkout@v3
      with:
          fetch-depth: 0
    - name: Check go modules
      run: go mod tidy && git diff -s --exit-code go.sum
    - name: Run linters
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.54
        args: -v --timeout=5m --issues-exit-code=0
    - name: Run govulncheck
      # do not prevent ci to succeed.
      continue-on-error: true
      uses: golang/govulncheck-action@v1
      with:
        # do not specify go-version-input to use pre-installed.
        go-package: ./...
    - name: Run Unit Tests
      run: make ci.test
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}